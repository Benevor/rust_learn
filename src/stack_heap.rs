// 栈与堆

/* stack
所有存储在stack上的数据必须有已知的固定大小
编译时大小位置的数据，或者运行时大小可能发生变化的数据必须存储在heap上
操作系统不需要寻找用来存储新数据的空间，因为那个位置永远在stack的顶端
访问更快
*/

/* heap
对内存的组织性较差
需要首先申请内存分配：操作系统需要找到足够大的空间来存放数据，并做好记录，以便下次分配
访问较慢
*/

// 指针：固定大小，所以指针本身可以放在stack上

/* 所有权：用于管理heap上的数据
跟踪代码的哪些部分正在使用heap的哪些数据
最小化heap上的重复数据量
清理heap上未使用的数据，以避免空间不足
 */